plugins {
    //引入api 传递依赖的方法 用来代替compile
    id 'java-library'
    id 'org.springframework.boot' version '2.1.6.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'

}

ext {
    springCloudVersion = 'Greenwich.SR2'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    maven { url 'https://maven.aliyun.com/repository/public/' }
    mavenLocal()
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

subprojects {
    // 在这里使用plugin
    /* 使用二进制插件 */
    apply plugin: 'java' // java是gradle的核心插件，是内置的，内置插件不需要配置依赖路径
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        mavenLocal()
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {

    }
}

test {
    useJUnitPlatform()
}